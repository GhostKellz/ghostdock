version: '3.8'

services:
  ghostdock:
    build: 
      context: .
      dockerfile: Dockerfile.production
    container_name: ghostdock-registry
    restart: unless-stopped
    ports:
      - "5000:5000"  # Registry API
      - "8080:8080"  # Web UI
    environment:
      - RUST_LOG=info
      - GHOSTDOCK_DATABASE_URL=sqlite:///app/data/ghostdock.db
      - GHOSTDOCK_STORAGE_PATH=/app/blobs
      - GHOSTDOCK_JWT_SECRET=${JWT_SECRET:-change-me-in-production}
    volumes:
      - ghostdock_data:/app/data
      - ghostdock_blobs:/app/blobs
      - ./config:/app/config:ro
    networks:
      - ghostdock_net
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ghostdock-registry.rule=Host(`registry.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.ghostdock-registry.tls=true"
      - "traefik.http.routers.ghostdock-registry.tls.certresolver=letsencrypt"
      - "traefik.http.services.ghostdock-registry.loadbalancer.server.port=5000"
      - "traefik.http.routers.ghostdock-ui.rule=Host(`ui.${DOMAIN:-localhost}`)"
      - "traefik.http.services.ghostdock-ui.loadbalancer.server.port=8080"

  redis:
    image: redis:7.2-alpine
    container_name: ghostdock-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    networks:
      - ghostdock_net

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: ghostdock-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ghostdock_net

  grafana:
    image: grafana/grafana:10.0.0
    container_name: ghostdock-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - ghostdock_net

  loki:
    image: grafana/loki:2.9.0
    container_name: ghostdock-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - ghostdock_net

  promtail:
    image: grafana/promtail:2.9.0
    container_name: ghostdock-promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/promtail.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - ghostdock_net

  traefik:
    image: traefik:v3.0
    container_name: ghostdock-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"  # Traefik dashboard
    environment:
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_API_INSECURE=true
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
      - TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80
      - TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS=:443
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL=${ACME_EMAIL}
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_STORAGE=/letsencrypt/acme.json
      - TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_HTTPCHALLENGE_ENTRYPOINT=web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/letsencrypt
    networks:
      - ghostdock_net

volumes:
  ghostdock_data:
    driver: local
  ghostdock_blobs:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  traefik_certs:
    driver: local

networks:
  ghostdock_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

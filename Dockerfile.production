# Multi-stage Docker build for production
FROM rust:1.75-alpine AS builder

# Install build dependencies
RUN apk add --no-cache musl-dev openssl-dev openssl-libs-static pkgconfig

WORKDIR /app

# Copy dependency files for better caching
COPY Cargo.toml Cargo.lock ./
COPY src ./src

# Build for release with optimizations
ENV RUSTFLAGS="-C target-feature=+crt-static"
RUN cargo build --release --target x86_64-unknown-linux-musl

# Runtime stage
FROM alpine:3.18

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata && \
    addgroup -g 1001 ghostdock && \
    adduser -D -s /bin/sh -u 1001 -G ghostdock ghostdock

# Create necessary directories
RUN mkdir -p /app/data /app/blobs /app/config && \
    chown -R ghostdock:ghostdock /app

# Copy binary from builder
COPY --from=builder /app/target/x86_64-unknown-linux-musl/release/ghostdock /app/
COPY --chown=ghostdock:ghostdock assets /app/assets/
COPY --chown=ghostdock:ghostdock config/default.toml /app/config/

# Switch to non-root user
USER ghostdock

WORKDIR /app

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD ["/app/ghostdock", "health-check"]

# Expose ports
EXPOSE 5000 8080

# Set environment
ENV RUST_LOG=info
ENV GHOSTDOCK_CONFIG_PATH=/app/config/default.toml

CMD ["/app/ghostdock"]
